数组指针
<指向数组的类型>（*<变量名>）[<指向数组的元素个数>]
int a[10];
float b[20];
char c[30];
int (*pa)[10]=&a;   &a类型 int(*)[10]
float (*pb)[20]=&b;  &b类型 float(*)[20]
char (*pc)[30]=&c;   &c类型 char (*)[30]
数组指针指向数组a,b,c而不是指向数组的第一个元素
数组指针定义时一定要指出指向的数组类型和长度，赋值符右侧的数组变量之前要加取地址符
写成 int(*pa)[10]=a;是错误的 a隐式转换为int *与左侧 int (*)[10]类型不匹配
数组指针加(减)1代表指针位置向后（前）移动了整个数组的长度，常见于在二维数组中的应用

二维数组中数组指针的应用
int a[4][5]
数组名a作为表达式的值可以看作是指向数组首元素的指针,而二维数组的元素为一维数组
即a作为表达式的值具有 int (*)[5]的类型，指向二维数组中的第一行
a+1则指向第二行,以此类推  这里a,a+1等称作行指针，a+i指向二维数组的第i+1行
对行指针进行解引用后
*(a+i)即代表指向第i+1行第一个元素的指针,被称为列指针，*（a+i）+j指向 第i+1行的第j+1个元素的指针

总结：访问二维数组中第i+1行第j+1列元素的方法
a[i][j];
*(*(a+i)+j);
*(a[i]+j);
采用解引用模式一定是*(.....);格式

指针数组
元素类型为指针的数组
int *ptr[10];元素类型为int *
或写为 int *(ptr[10])
char *pcARR[]={"dqr","love","hongshaorou"};


函数指针
<函数返回类型>（*<变量名>）(<参数类型说明>)
double (*funptr)(int ,int );//参数后可以跟参数名，但是编译器自动忽略
他指向的函数原型为 double f(int ,int)
函数指针数组
int (*ptr[10])(int ,int )//含有10个元素的数组，每一个元素都是函数指针,指向的函数返回值为int 参数类型为int,int












